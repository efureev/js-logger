{"version":3,"file":"bundle.umd.js","sources":["../../src/LogLevel.ts","../../src/utils.ts","../../src/MessageBlock.ts","../../src/Message.ts","../../src/Color.ts","../../src/Logger.ts","../../src/drivers/ConsoleDriver.ts","../../src/shorcuts.ts"],"sourcesContent":["export const LEVEL_ERROR: number = 1 << 0\nexport const LEVEL_INFO: number = 1 << 1\nexport const LEVEL_DEBUG: number = 1 << 2\nexport const LEVEL_TRACE: number = 1 << 3\n\nexport default {\n  LEVEL_ERROR,\n  LEVEL_INFO,\n  LEVEL_DEBUG,\n  LEVEL_TRACE,\n}\n","export const isString = (str: any) => typeof str !== 'string'\n\nexport const isEmptyObject = (object: object) => {\n  // @ts-ignore\n  for ({} in object) return false\n\n  return true\n}\n","import { isEmptyObject } from './utils'\n\nexport interface MessageBlockStyle {\n  [index: string]: any\n\n  color?: string\n  background?: string\n}\n\nclass MessageBlock {\n  private _text: string\n  private style: MessageBlockStyle = new Object(null)\n\n  constructor(text: string) {\n    this._text = text\n  }\n\n  push(key: string, value: string, check: boolean = false): this {\n    if (!check || !this.has('color')) {\n      this.style[key] = value\n    }\n\n    return this\n  }\n\n  has(key: string): boolean {\n    return this.style[key] !== undefined\n  }\n\n  color(value: string, check: boolean = false): this {\n    return this.push('color', value, check)\n  }\n\n  background(value: string, check: boolean = false): this {\n    return this.push('background', value, check)\n  }\n\n  marginLeft(value: number, check: boolean = false): this {\n    if (value != 0) {\n      return this.push('margin-left', `${value}px`, check)\n    }\n    return this\n  }\n\n  marginRight(value: number, check: boolean = false): this {\n    if (value != 0) {\n      return this.push('margin-right', `${value}px`, check)\n    }\n    return this\n  }\n\n  marginTop(value: number, check: boolean = false): this {\n    return this.push('margin-top', `${value}px`, check)\n  }\n\n  marginBottom(value: number, check: boolean = false): this {\n    return this.push('margin-bottom', `${value}px`, check)\n  }\n\n  margin(vValue: number, hValue?: number, check: boolean = false): this {\n    let value = vValue === 0 ? '' : `${vValue}px`\n    if (hValue !== undefined) {\n      value += ` ${hValue}px`\n    }\n    return this.push('margin', value, check)\n  }\n\n  padding(vValue: number, hValue?: number, check: boolean = false): this {\n    let value = vValue === 0 ? '' : `${vValue}px`\n    if (hValue !== undefined) {\n      value += ` ${hValue}px`\n    }\n    return this.push('padding', value, check)\n  }\n\n  offsetLeft(value: number, check: boolean = false): this {\n    return this.marginLeft(value * 10, check)\n  }\n\n  offsetRight(value: number, check: boolean = false): this {\n    return this.marginRight(value * 10, check)\n  }\n\n  borderRadius(value: number, check: boolean = false): this {\n    return this.push('border-radius', `${value}px`, check)\n  }\n\n  border(width: number, style: string, color: string, check: boolean = false): this {\n    return this.push('border', `${width}px ${style} ${color}`, check)\n  }\n\n  size(value: number, check: boolean = false): this {\n    return this.push('font-size', `${value}px`, check)\n  }\n\n  bold(check: boolean = false): this {\n    return this.push('font-weight', 'bold', check)\n  }\n\n  italic(check: boolean = false): this {\n    return this.push('font-style', 'italic', check)\n  }\n\n  lineHeight(value: number, check: boolean = false): this {\n    return this.push('line-height', `${value}px`, check)\n  }\n\n  width(value?: number, check: boolean = false): this {\n    return value ? this.push('width', `${value}px`, check) : this\n  }\n\n  height(value?: number, check: boolean = false): this {\n    return value ? this.push('height', `${value}px`, check) : this\n  }\n\n  image(url: string, width?: number, height?: number): this {\n    return this.push('background-image', `url(${url}}`).push('background-size', `cover`).width(width).height(height)\n  }\n\n  text(value: string): this {\n    this._text = value\n\n    return this\n  }\n\n  getText(): string {\n    return this._text\n  }\n\n  getStyle(): MessageBlockStyle {\n    return this.style\n  }\n\n  hasStyle(): boolean {\n    return !isEmptyObject(this.style)\n  }\n\n  clearStyle(): this {\n    this.style = new Object(null)\n\n    return this\n  }\n\n  toJSON(): string {\n    return JSON.stringify({\n      _text: this._text,\n      style: this.style,\n    })\n  }\n\n  static instance(block: MessageBlock | string): MessageBlock {\n    return block instanceof MessageBlock ? block : new MessageBlock(block)\n  }\n}\n\nexport default MessageBlock\n","import MessageBlock from './MessageBlock'\n\nclass Message {\n  private blocks: Array<MessageBlock> = new Array<MessageBlock>()\n\n  constructor(text?: MessageBlock | string) {\n    this.parse(text)\n  }\n\n  getBlocks(): Array<MessageBlock> {\n    return this.blocks\n  }\n\n  pushBlock(...args: (MessageBlock | null)[]): this {\n    args.forEach(block => {\n      if (block instanceof MessageBlock) {\n        this.blocks.push(block)\n      }\n    })\n\n    return this\n  }\n\n  clear() {\n    this.blocks = []\n  }\n\n  count(): number {\n    return this.blocks.length\n  }\n\n  private parse(text?: string | MessageBlock): void {\n    if (text) {\n      this.pushBlock(MessageBlock.instance(text))\n    }\n  }\n\n  static instance(block?: Message | MessageBlock | string): Message {\n    return block instanceof Message ? block : new Message(block)\n  }\n}\n\nexport default Message\n","const colors = {\n  black: '#000000',\n  gray: '#1B2B34',\n  red: '#EC5f67',\n  orange: '#F99157',\n  yellow: '#FAC863',\n  green: '#99C794',\n  teal: '#5FB3B3',\n  blue: '#6699CC',\n  purple: '#C594C5',\n  brown: '#AB7967',\n  white: '#FFFFFF',\n}\n\nexport default colors\n","import { LoggerDriver } from './drivers/LoggerDriver'\nimport { LEVEL_DEBUG, LEVEL_ERROR, LEVEL_INFO, LEVEL_TRACE } from './LogLevel'\nimport Message from './Message'\nimport colors from './Color'\nimport MessageBlock from './MessageBlock'\n\nexport interface LoggerConfig {\n  driver: LoggerDriver\n  level?: number\n}\n\nclass Logger {\n  private readonly driver: LoggerDriver\n  private logLevel: number = LEVEL_ERROR\n\n  constructor(config: LoggerConfig) {\n    this.driver = config.driver\n    if (config.level) {\n      this.logLevel = config.level\n    }\n  }\n\n  setLevel(level: number): void {\n    this.logLevel = level\n  }\n\n  public getDriver(): LoggerDriver {\n    return this.driver\n  }\n\n  private shouldLog(msgLevel: number) {\n    return this.logLevel <= msgLevel // @todo: bit operations\n  }\n\n  log(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    this.driver.log(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  info(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    if (!this.shouldLog(LEVEL_INFO)) {\n      return\n    }\n\n    const msg = Logger.buildMessage(msgText, prefix, offset)\n\n    this.driver.info(msg)\n  }\n\n  debug(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_DEBUG)) {\n      return\n    }\n\n    this.driver.debug(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  error(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_ERROR)) {\n      return\n    }\n\n    this.driver.error(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  trace(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_TRACE)) {\n      return\n    }\n\n    this.driver.trace(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  panel(\n    panelText: string | MessageBlock,\n    { bgColor = colors.white, color = colors.gray, offset = 0 } = {},\n    baseText?: string | MessageBlock\n  ) {\n    const msg = Message.instance().pushBlock(\n      MessageBlock.instance(panelText)\n        .background(bgColor)\n        .color(color)\n        .offsetLeft(offset)\n        .borderRadius(3)\n        .padding(2, 4),\n\n      baseText ? MessageBlock.instance(baseText).offsetLeft(1) : null\n    )\n\n    this.driver.log(msg)\n  }\n\n  private static buildMessage(msgText: string | Message | MessageBlock, prefix?: string, offset: number = 0): Message {\n    if (msgText instanceof Message) {\n      return msgText\n    }\n\n    const msg = new Message()\n\n    if (prefix) {\n      const block = MessageBlock.instance(prefix).offsetRight(1)\n\n      if (offset) {\n        block.offsetLeft(offset)\n      }\n\n      msg.pushBlock(block)\n    }\n\n    msg.pushBlock(MessageBlock.instance(msgText))\n\n    return msg\n  }\n}\n\nexport default Logger\n","import Message from '../Message'\nimport MessageBlock from '../MessageBlock'\nimport { LoggerDriver } from './LoggerDriver'\n\nexport interface FormatConsole {\n  fmtStr: string\n  fmtArgs: Array<string>\n}\n\nclass ConsoleDriver implements LoggerDriver {\n  debug(msg: Message): void {\n    this.perform(msg, 'debug')\n  }\n\n  info(msg: Message): void {\n    this.perform(msg, 'info')\n  }\n\n  log(msg: Message): void {\n    this.perform(msg, 'log')\n  }\n\n  error(msg: Message): void {\n    this.perform(msg, 'error')\n  }\n\n  trace(msg: Message): void {\n    this.perform(msg, 'trace')\n  }\n\n  protected perform(msg: Message, type: string) {\n    const lines = ConsoleDriver.buildStrings(ConsoleDriver.formatMessage(msg))\n\n    // @ts-ignore\n    console[type](...lines)\n    // console[msg.type ?? type](res[0], ...res[1])\n  }\n\n  protected static buildStrings(fmt: FormatConsole): Array<string> {\n    return [fmt.fmtStr, ...fmt.fmtArgs]\n  }\n\n  protected static formatMessage(msg: Message): FormatConsole {\n    let fmtStr: string = ''\n    const fmtArgs: Array<string> = []\n\n    msg.getBlocks().forEach(block => {\n      const { fmtStr: str, fmtArgs: args } = ConsoleDriver.formatBlock(block)\n      fmtStr += str\n      fmtArgs.push(...args)\n    })\n\n    return { fmtStr, fmtArgs }\n  }\n\n  protected static formatBlock(block: MessageBlock): FormatConsole {\n    let fmtStr: string = `%c${block.getText()}`\n    const fmtArgs: Array<string> = []\n    let strStyle = ''\n\n    const style = block.getStyle()\n    for (const keyStyle in style) {\n      strStyle += `${keyStyle}:${style[keyStyle]};`\n    }\n    fmtArgs.push(strStyle)\n\n    return { fmtStr, fmtArgs }\n  }\n}\n\nexport default ConsoleDriver\n","import { LEVEL_ERROR } from './LogLevel'\nimport Logger from './Logger'\nimport { ConsoleDriver } from './drivers'\n\nconst BrowserLogger = (level: number = LEVEL_ERROR) => new Logger({ level: level, driver: new ConsoleDriver() })\n\nexport { BrowserLogger }\n"],"names":["LEVEL_ERROR","LEVEL_INFO","LEVEL_DEBUG","LEVEL_TRACE","isEmptyObject","object","MessageBlock","text","Object","_text","key","value","check","has","style","undefined","push","vValue","hValue","marginLeft","marginRight","width","color","url","height","JSON","stringify","block","Message","Array","parse","blocks","args","forEach","length","pushBlock","instance","colors","black","gray","red","orange","yellow","green","teal","blue","purple","brown","white","Logger","config","driver","level","logLevel","msgLevel","msgText","prefix","offset","log","buildMessage","shouldLog","msg","info","debug","error","trace","panelText","bgColor","baseText","background","offsetLeft","borderRadius","padding","offsetRight","ConsoleDriver","perform","type","lines","buildStrings","formatMessage","console","fmt","fmtStr","fmtArgs","getBlocks","formatBlock","str","getText","strStyle","getStyle","keyStyle","BrowserLogger"],"mappings":"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"}