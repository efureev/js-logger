{"version":3,"file":"bundle.umd.js","sources":["../../src/LogLevel.ts","../../src/utils.ts","../../src/MessageBlock.ts","../../src/Message.ts","../../src/Logger.ts","../../src/drivers/ConsoleDriver.ts","../../src/shorcuts.ts"],"sourcesContent":["export const LEVEL_ERROR: number = 1 << 0\nexport const LEVEL_INFO: number = 1 << 1\nexport const LEVEL_DEBUG: number = 1 << 2\nexport const LEVEL_TRACE: number = 1 << 3\n\nexport default {\n  LEVEL_ERROR,\n  LEVEL_INFO,\n  LEVEL_DEBUG,\n  LEVEL_TRACE,\n}\n","export const isString = (str: any) => typeof str !== 'string'\n\nexport const isEmptyObject = (object: object) => {\n  // @ts-ignore\n  for ({} in object) return false\n\n  return true\n}\n","// export interface MessageBlockStyle extends {[index: string]:any}\n\nimport {isEmptyObject} from \"./utils\";\n\nexport interface MessageBlockStyle {\n  [index: string]: any\n\n  color?: string\n  background?: string\n}\n\nclass MessageBlock {\n  private _text: string;\n  private style: MessageBlockStyle = new Object(null);\n\n  constructor(text: string) {\n    this._text = text\n    // this.parse(block)\n  }\n\n  push(key: string, value: string): this {\n    this.style[key] = value\n\n    return this\n  }\n\n  color(value: string): this {\n    return this.push('color', value)\n  }\n\n  background(value: string): this {\n    return this.push('background', value)\n  }\n\n  marginLeft(value: number): this {\n    return this.push('margin-left', `${value}px`)\n  }\n\n  paddingLeft(value: number): this {\n    return this.marginLeft(value * 10)\n  }\n\n  text(value: string): this {\n    this._text = value\n\n    return this\n  }\n\n  getText(): string {\n    return this._text\n  }\n\n  getStyle(): MessageBlockStyle {\n    return this.style\n  }\n\n  hasStyle(): boolean {\n    return !isEmptyObject(this.style)\n  }\n\n  clearStyle(): this {\n    this.style = new Object(null)\n\n    return this;\n  }\n\n  toJSON(): string {\n    return JSON.stringify({\n      _text: this._text,\n      style: this.style\n    });\n  }\n\n  static instance(block: MessageBlock | string): MessageBlock {\n    return block instanceof MessageBlock ? block : new MessageBlock(block)\n  }\n\n  /*  getStyleString(): string {\n      let str = ''\n\n      for (const key in this.style) {\n        const v = this.style[key]\n\n        str += `${key}:${v};`\n      }\n\n      return str\n    }*/\n\n  /*\n    parse(block) {\n      if (isString(block)) {\n        this.text = block\n        return\n      }\n\n      if (isObject(block)) {\n        if (!block.text) {\n          throw new Error('Invalid MessageBlock config')\n        }\n\n        this.text = block.text\n        // this.style = block.type || null\n        return\n      }\n\n      throw new Error('Invalid MessageBlock config')\n    }*/\n}\n\nexport default MessageBlock\n","// export interface MessageBlockStyle extends {[index: string]:any}\n\nimport MessageBlock from \"./MessageBlock\";\n\nclass Message {\n  private blocks: Array<MessageBlock> = new Array<MessageBlock>();\n\n  constructor(text?: MessageBlock | string) {\n    this.parse(text)\n  }\n\n  getBlocks(): Array<MessageBlock> {\n    return this.blocks\n  }\n\n  pushBlock(block: MessageBlock): void {\n    this.blocks.push(block)\n  }\n\n  clear() {\n    this.blocks = []\n  }\n\n  count(): number {\n    return this.blocks.length\n  }\n\n  private parse(text?: string | MessageBlock): void {\n    if (text) {\n      this.pushBlock(MessageBlock.instance(text))\n    }\n  }\n\n  static instance(block: Message | MessageBlock | string): Message {\n    return block instanceof Message ? block : new Message(block)\n  }\n}\n\nexport default Message\n","import {LoggerDriver} from \"./drivers/LoggerDriver\";\nimport {LEVEL_DEBUG, LEVEL_ERROR, LEVEL_INFO, LEVEL_TRACE} from \"./LogLevel\";\nimport Message from \"./Message\";\nimport MessageBlock from \"./MessageBlock\";\n\nexport interface LoggerConfig {\n  driver: LoggerDriver\n  level?: number\n}\n\nclass Logger {\n  private readonly driver: LoggerDriver;\n  private logLevel: number = LEVEL_ERROR;\n\n  constructor(config: LoggerConfig) {\n    this.driver = config.driver\n    if (config.level) {\n      this.logLevel = config.level\n    }\n  }\n\n  setLevel(level: number): void {\n    this.logLevel = level\n  }\n\n  public getDriver(): LoggerDriver {\n    return this.driver\n  }\n\n  private shouldLog(msgLevel: number) {\n    return this.logLevel <= msgLevel // @todo: bit operations\n  }\n\n  log(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    this.driver.log(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  info(msgText: string, prefix?: string, offset = 0): void {\n    if (!this.shouldLog(LEVEL_INFO)) {\n      return\n    }\n\n    const msg = Logger.buildMessage(msgText, prefix, offset);\n\n    this.driver.info(msg)\n  }\n\n  debug(msgText: string, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_DEBUG)) {\n      return\n    }\n\n    this.driver.debug(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  error(msgText: string, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_ERROR)) {\n      return\n    }\n\n    this.driver.error(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n\n  trace(msgText: string, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_TRACE)) {\n      return\n    }\n\n    this.driver.trace(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  private static buildMessage(msgText: string | Message | MessageBlock, prefix?: string, offset: number = 0): Message {\n    if (msgText instanceof Message) {\n      return msgText\n    }\n\n    const msg = new Message();\n\n    if (prefix) {\n      const block = new MessageBlock(prefix)\n      if (offset) {\n        block.paddingLeft(offset)\n      }\n\n      msg.pushBlock(block)\n    }\n\n    msg.pushBlock(MessageBlock.instance(msgText))\n\n    return msg\n  }\n}\n\nexport default Logger\n","/*\nexport const STYLE_INFO = 'color: white; background:blue; padding: 2px 5px;'\nexport const STYLE_PURPLE = 'color: white; background:purple; padding: 2px 5px;'\n\nexport const map = {\n  info: STYLE_INFO,\n  purple: STYLE_PURPLE,\n}\n*/\n\nimport Message from \"../Message\";\nimport MessageBlock from \"../MessageBlock\";\nimport {LoggerDriver} from \"./LoggerDriver\";\n\nexport interface FormatConsole {\n  fmtStr: string\n  fmtArgs: Array<string>\n}\n\nclass ConsoleDriver implements LoggerDriver {\n  debug(msg: Message): void {\n    this.perform(msg, 'debug')\n  }\n\n  info(msg: Message): void {\n    this.perform(msg, 'info')\n  }\n\n  log(msg: Message): void {\n    this.perform(msg, 'log')\n  }\n\n  error(msg: Message): void {\n    this.perform(msg, 'error')\n  }\n\n  trace(msg: Message): void {\n    this.perform(msg, 'trace')\n  }\n\n  protected perform(msg: Message, type: string) {\n    const lines = ConsoleDriver.buildStrings(ConsoleDriver.formatMessage(msg))\n\n    // @ts-ignore\n    console[type](...lines)\n    // console[msg.type ?? type](res[0], ...res[1])\n  }\n\n  protected static buildStrings(fmt: FormatConsole): Array<string> {\n    return [fmt.fmtStr, ...fmt.fmtArgs]\n  }\n\n  protected static formatMessage(msg: Message): FormatConsole {\n    let fmtStr: string = ''\n    const fmtArgs: Array<string> = []\n\n    msg.getBlocks().forEach(\n      (block) => {\n        const {fmtStr: str, fmtArgs: args} = ConsoleDriver.formatBlock(block)\n        fmtStr += str\n        fmtArgs.push(...args)\n      }\n    )\n\n    return {fmtStr, fmtArgs}\n  }\n\n  protected static formatBlock(block: MessageBlock): FormatConsole {\n    let fmtStr: string = ''\n    const fmtArgs: Array<string> = []\n\n    if (block.hasStyle()) {\n      fmtStr += '%c'\n\n      const style = block.getStyle()\n      let strStyle = ''\n      for (const keyStyle in style) {\n        strStyle += `${keyStyle}:${style[keyStyle]};`\n      }\n      fmtArgs.push(strStyle)\n    }\n\n    fmtStr += '%s'\n    fmtArgs.push(block.getText())\n\n    return {fmtStr, fmtArgs}\n  }\n\n}\n\nexport default ConsoleDriver\n","import {LEVEL_ERROR} from \"./LogLevel\";\nimport Logger from \"./Logger\";\nimport {ConsoleDriver} from \"./drivers\";\n\nexport const BrowserLogger = (level: number = LEVEL_ERROR) => new Logger({level: level, driver: new ConsoleDriver()})\n"],"names":["LEVEL_ERROR","LEVEL_INFO","LEVEL_DEBUG","LEVEL_TRACE","isEmptyObject","object","MessageBlock","text","Object","_text","key","value","style","push","marginLeft","JSON","stringify","block","Message","Array","parse","blocks","length","pushBlock","instance","Logger","config","driver","level","logLevel","msgLevel","msgText","prefix","offset","log","buildMessage","shouldLog","msg","info","debug","error","trace","paddingLeft","ConsoleDriver","perform","type","lines","buildStrings","formatMessage","console","fmt","fmtStr","fmtArgs","getBlocks","forEach","formatBlock","str","args","hasStyle","getStyle","strStyle","keyStyle","getText","BrowserLogger"],"mappings":"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"}