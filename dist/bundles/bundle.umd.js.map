{"version":3,"file":"bundle.umd.js","sources":["../../src/LogLevel.ts","../../src/utils.ts","../../src/MessageBlock.ts","../../src/Message.ts","../../src/Logger.ts","../../src/drivers/ConsoleDriver.ts","../../src/shorcuts.ts"],"sourcesContent":["export const LEVEL_ERROR: number = 1 << 0\nexport const LEVEL_INFO: number = 1 << 1\nexport const LEVEL_DEBUG: number = 1 << 2\nexport const LEVEL_TRACE: number = 1 << 3\n\nexport default {\n  LEVEL_ERROR,\n  LEVEL_INFO,\n  LEVEL_DEBUG,\n  LEVEL_TRACE,\n}\n","export const isString = (str: any) => typeof str !== 'string'\n\nexport const isEmptyObject = (object: object) => {\n  // @ts-ignore\n  for ({} in object) return false\n\n  return true\n}\n","import { isEmptyObject } from './utils'\n\nexport interface MessageBlockStyle {\n  [index: string]: any\n\n  color?: string\n  background?: string\n}\n\nclass MessageBlock {\n  private _text: string\n  private style: MessageBlockStyle = new Object(null)\n\n  constructor(text: string) {\n    this._text = text\n  }\n\n  push(key: string, value: string): this {\n    this.style[key] = value\n\n    return this\n  }\n\n  color(value: string): this {\n    return this.push('color', value)\n  }\n\n  background(value: string): this {\n    return this.push('background', value)\n  }\n\n  marginLeft(value: number): this {\n    return this.push('margin-left', `${value}px`)\n  }\n\n  marginRight(value: number): this {\n    return this.push('margin-right', `${value}px`)\n  }\n\n  marginTop(value: number): this {\n    return this.push('margin-top', `${value}px`)\n  }\n\n  marginBottom(value: number): this {\n    return this.push('margin-bottom', `${value}px`)\n  }\n\n  margin(vValue: number, hValue?: number): this {\n    let value = `${vValue}px`\n    if (hValue !== undefined) {\n      value += ` ${hValue}px`\n    }\n    return this.push('margin', value)\n  }\n\n  padding(vValue: number, hValue?: number): this {\n    let value = `${vValue}px`\n    if (hValue !== undefined) {\n      value += ` ${hValue}px`\n    }\n    return this.push('padding', value)\n  }\n\n  offsetLeft(value: number): this {\n    return this.marginLeft(value * 10)\n  }\n\n  offsetRight(value: number): this {\n    return this.marginRight(value * 10)\n  }\n\n  borderRadius(value: number): this {\n    return this.push('border-radius', `${value}px`)\n  }\n\n  border(width: number, style: string, color: string): this {\n    return this.push('border', `${width}px ${style} ${color}`)\n  }\n\n  size(value: number): this {\n    return this.push('font-size', `${value}px`)\n  }\n\n  bold(): this {\n    return this.push('font-weight', 'bold')\n  }\n\n  lineHeight(value: number): this {\n    return this.push('line-height', `${value}px`)\n  }\n\n  width(value?: number): this {\n    return value ? this.push('width', `${value}px`) : this\n  }\n\n  height(value?: number): this {\n    return value ? this.push('height', `${value}px`) : this\n  }\n\n  image(url: string, width?: number, height?: number): this {\n    return this.push('background-image', `url(${url}}`).push('background-size', `cover`).width(width).height(height)\n  }\n\n  italic(): this {\n    return this.push('font-style', 'italic')\n  }\n\n  text(value: string): this {\n    this._text = value\n\n    return this\n  }\n\n  getText(): string {\n    return this._text\n  }\n\n  getStyle(): MessageBlockStyle {\n    return this.style\n  }\n\n  hasStyle(): boolean {\n    return !isEmptyObject(this.style)\n  }\n\n  clearStyle(): this {\n    this.style = new Object(null)\n\n    return this\n  }\n\n  toJSON(): string {\n    return JSON.stringify({\n      _text: this._text,\n      style: this.style,\n    })\n  }\n\n  static instance(block: MessageBlock | string): MessageBlock {\n    return block instanceof MessageBlock ? block : new MessageBlock(block)\n  }\n}\n\nexport default MessageBlock\n","import MessageBlock from './MessageBlock'\n\nclass Message {\n  private blocks: Array<MessageBlock> = new Array<MessageBlock>()\n\n  constructor(text?: MessageBlock | string) {\n    this.parse(text)\n  }\n\n  getBlocks(): Array<MessageBlock> {\n    return this.blocks\n  }\n\n  pushBlock(...args: MessageBlock[]): this {\n    args.forEach(block => {\n      this.blocks.push(block)\n    })\n\n    return this\n  }\n\n  clear() {\n    this.blocks = []\n  }\n\n  count(): number {\n    return this.blocks.length\n  }\n\n  private parse(text?: string | MessageBlock): void {\n    if (text) {\n      this.pushBlock(MessageBlock.instance(text))\n    }\n  }\n\n  static instance(block?: Message | MessageBlock | string): Message {\n    return block instanceof Message ? block : new Message(block)\n  }\n}\n\nexport default Message\n","import { LoggerDriver } from './drivers/LoggerDriver'\nimport { LEVEL_DEBUG, LEVEL_ERROR, LEVEL_INFO, LEVEL_TRACE } from './LogLevel'\nimport Message from './Message'\nimport MessageBlock from './MessageBlock'\n\nexport interface LoggerConfig {\n  driver: LoggerDriver\n  level?: number\n}\n\nclass Logger {\n  private readonly driver: LoggerDriver\n  private logLevel: number = LEVEL_ERROR\n\n  constructor(config: LoggerConfig) {\n    this.driver = config.driver\n    if (config.level) {\n      this.logLevel = config.level\n    }\n  }\n\n  setLevel(level: number): void {\n    this.logLevel = level\n  }\n\n  public getDriver(): LoggerDriver {\n    return this.driver\n  }\n\n  private shouldLog(msgLevel: number) {\n    return this.logLevel <= msgLevel // @todo: bit operations\n  }\n\n  log(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    this.driver.log(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  info(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    if (!this.shouldLog(LEVEL_INFO)) {\n      return\n    }\n\n    const msg = Logger.buildMessage(msgText, prefix, offset)\n\n    this.driver.info(msg)\n  }\n\n  debug(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_DEBUG)) {\n      return\n    }\n\n    this.driver.debug(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  error(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_ERROR)) {\n      return\n    }\n\n    this.driver.error(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  trace(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(LEVEL_TRACE)) {\n      return\n    }\n\n    this.driver.trace(Logger.buildMessage(msgText, prefix, offset))\n  }\n\n  private static buildMessage(msgText: string | Message | MessageBlock, prefix?: string, offset: number = 0): Message {\n    if (msgText instanceof Message) {\n      return msgText\n    }\n\n    const msg = new Message()\n\n    if (prefix) {\n      const block = MessageBlock.instance(prefix).offsetRight(1)\n\n      if (offset) {\n        block.offsetLeft(offset)\n      }\n\n      msg.pushBlock(block)\n    }\n\n    msg.pushBlock(MessageBlock.instance(msgText))\n\n    return msg\n  }\n}\n\nexport default Logger\n","import Message from '../Message'\nimport MessageBlock from '../MessageBlock'\nimport { LoggerDriver } from './LoggerDriver'\n\nexport interface FormatConsole {\n  fmtStr: string\n  fmtArgs: Array<string>\n}\n\nclass ConsoleDriver implements LoggerDriver {\n  debug(msg: Message): void {\n    this.perform(msg, 'debug')\n  }\n\n  info(msg: Message): void {\n    this.perform(msg, 'info')\n  }\n\n  log(msg: Message): void {\n    this.perform(msg, 'log')\n  }\n\n  error(msg: Message): void {\n    this.perform(msg, 'error')\n  }\n\n  trace(msg: Message): void {\n    this.perform(msg, 'trace')\n  }\n\n  protected perform(msg: Message, type: string) {\n    const lines = ConsoleDriver.buildStrings(ConsoleDriver.formatMessage(msg))\n\n    // @ts-ignore\n    console[type](...lines)\n    // console[msg.type ?? type](res[0], ...res[1])\n  }\n\n  protected static buildStrings(fmt: FormatConsole): Array<string> {\n    return [fmt.fmtStr, ...fmt.fmtArgs]\n  }\n\n  protected static formatMessage(msg: Message): FormatConsole {\n    let fmtStr: string = ''\n    const fmtArgs: Array<string> = []\n\n    msg.getBlocks().forEach(block => {\n      const { fmtStr: str, fmtArgs: args } = ConsoleDriver.formatBlock(block)\n      fmtStr += str\n      fmtArgs.push(...args)\n    })\n\n    return { fmtStr, fmtArgs }\n  }\n\n  protected static formatBlock(block: MessageBlock): FormatConsole {\n    let fmtStr: string = `%c${block.getText()}`\n    const fmtArgs: Array<string> = []\n    let strStyle = ''\n\n    const style = block.getStyle()\n    for (const keyStyle in style) {\n      strStyle += `${keyStyle}:${style[keyStyle]};`\n    }\n    fmtArgs.push(strStyle)\n\n    return { fmtStr, fmtArgs }\n  }\n}\n\nexport default ConsoleDriver\n","import { LEVEL_ERROR } from './LogLevel'\nimport Logger from './Logger'\nimport { ConsoleDriver } from './drivers'\n\nconst BrowserLogger = (level: number = LEVEL_ERROR) => new Logger({ level: level, driver: new ConsoleDriver() })\n\nexport { BrowserLogger }\n"],"names":["LEVEL_ERROR","LEVEL_INFO","LEVEL_DEBUG","LEVEL_TRACE","isEmptyObject","object","MessageBlock","text","Object","_text","key","value","style","push","vValue","hValue","undefined","marginLeft","marginRight","width","color","url","height","JSON","stringify","block","Message","Array","parse","blocks","args","forEach","length","pushBlock","instance","Logger","config","driver","level","logLevel","msgLevel","msgText","prefix","offset","log","buildMessage","shouldLog","msg","info","debug","error","trace","offsetRight","offsetLeft","ConsoleDriver","perform","type","lines","buildStrings","formatMessage","console","fmt","fmtStr","fmtArgs","getBlocks","formatBlock","str","getText","strStyle","getStyle","keyStyle","BrowserLogger"],"mappings":"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"}