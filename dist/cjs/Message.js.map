{"version":3,"sources":["../../src/Message.ts"],"names":["Message","text","Array","parse","blocks","args","forEach","block","MessageBlock","push","length","pushBlock","instance"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;IAEMA,O;AAGJ,mBAAYC,IAAZ,EAA0C;AAAA;;AAAA,oCAFJ,IAAIC,KAAJ,EAEI;;AACxC,SAAKC,KAAL,CAAWF,IAAX;AACD;;;;WAED,qBAAiC;AAC/B,aAAO,KAAKG,MAAZ;AACD;;;WAED,qBAAkD;AAAA;;AAAA,wCAArCC,IAAqC;AAArCA,QAAAA,IAAqC;AAAA;;AAChDA,MAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,KAAK,EAAI;AACpB,YAAIA,KAAK,YAAYC,qBAArB,EAAmC;AACjC,UAAA,KAAI,CAACJ,MAAL,CAAYK,IAAZ,CAAiBF,KAAjB;AACD;AACF,OAJD;AAMA,aAAO,IAAP;AACD;;;WAED,iBAAQ;AACN,WAAKH,MAAL,GAAc,EAAd;AACD;;;WAED,iBAAgB;AACd,aAAO,KAAKA,MAAL,CAAYM,MAAnB;AACD;;;WAED,eAAcT,IAAd,EAAkD;AAChD,UAAIA,IAAJ,EAAU;AACR,aAAKU,SAAL,CAAeH,sBAAaI,QAAb,CAAsBX,IAAtB,CAAf;AACD;AACF;;;WAED,kBAAgBM,KAAhB,EAAkE;AAChE,aAAOA,KAAK,YAAYP,OAAjB,GAA2BO,KAA3B,GAAmC,IAAIP,OAAJ,CAAYO,KAAZ,CAA1C;AACD;;;;;;eAGYP,O","sourcesContent":["import MessageBlock from './MessageBlock'\n\nclass Message {\n  private blocks: Array<MessageBlock> = new Array<MessageBlock>()\n\n  constructor(text?: MessageBlock | string) {\n    this.parse(text)\n  }\n\n  getBlocks(): Array<MessageBlock> {\n    return this.blocks\n  }\n\n  pushBlock(...args: (MessageBlock | null)[]): this {\n    args.forEach(block => {\n      if (block instanceof MessageBlock) {\n        this.blocks.push(block)\n      }\n    })\n\n    return this\n  }\n\n  clear() {\n    this.blocks = []\n  }\n\n  count(): number {\n    return this.blocks.length\n  }\n\n  private parse(text?: string | MessageBlock): void {\n    if (text) {\n      this.pushBlock(MessageBlock.instance(text))\n    }\n  }\n\n  static instance(block?: Message | MessageBlock | string): Message {\n    return block instanceof Message ? block : new Message(block)\n  }\n}\n\nexport default Message\n"],"file":"Message.js"}