{"version":3,"sources":["../../src/Message.ts"],"names":["Message","text","Array","parse","blocks","args","forEach","block","push","length","pushBlock","MessageBlock","instance"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;IAEMA,O;AAGJ,mBAAYC,IAAZ,EAA0C;AAAA;;AAAA,oCAFJ,IAAIC,KAAJ,EAEI;;AACxC,SAAKC,KAAL,CAAWF,IAAX;AACD;;;;WAED,qBAAiC;AAC/B,aAAO,KAAKG,MAAZ;AACD;;;WAED,qBAAyC;AAAA;;AAAA,wCAA5BC,IAA4B;AAA5BA,QAAAA,IAA4B;AAAA;;AACvCA,MAAAA,IAAI,CAACC,OAAL,CAAa,UAAAC,KAAK,EAAI;AACpB,QAAA,KAAI,CAACH,MAAL,CAAYI,IAAZ,CAAiBD,KAAjB;AACD,OAFD;AAIA,aAAO,IAAP;AACD;;;WAED,iBAAQ;AACN,WAAKH,MAAL,GAAc,EAAd;AACD;;;WAED,iBAAgB;AACd,aAAO,KAAKA,MAAL,CAAYK,MAAnB;AACD;;;WAED,eAAcR,IAAd,EAAkD;AAChD,UAAIA,IAAJ,EAAU;AACR,aAAKS,SAAL,CAAeC,sBAAaC,QAAb,CAAsBX,IAAtB,CAAf;AACD;AACF;;;WAED,kBAAgBM,KAAhB,EAAkE;AAChE,aAAOA,KAAK,YAAYP,OAAjB,GAA2BO,KAA3B,GAAmC,IAAIP,OAAJ,CAAYO,KAAZ,CAA1C;AACD;;;;;;eAGYP,O","sourcesContent":["import MessageBlock from './MessageBlock'\n\nclass Message {\n  private blocks: Array<MessageBlock> = new Array<MessageBlock>()\n\n  constructor(text?: MessageBlock | string) {\n    this.parse(text)\n  }\n\n  getBlocks(): Array<MessageBlock> {\n    return this.blocks\n  }\n\n  pushBlock(...args: MessageBlock[]): this {\n    args.forEach(block => {\n      this.blocks.push(block)\n    })\n\n    return this\n  }\n\n  clear() {\n    this.blocks = []\n  }\n\n  count(): number {\n    return this.blocks.length\n  }\n\n  private parse(text?: string | MessageBlock): void {\n    if (text) {\n      this.pushBlock(MessageBlock.instance(text))\n    }\n  }\n\n  static instance(block?: Message | MessageBlock | string): Message {\n    return block instanceof Message ? block : new Message(block)\n  }\n}\n\nexport default Message\n"],"file":"Message.js"}