{"version":3,"sources":["../../src/MessageBlock.ts"],"names":["MessageBlock","text","Object","_text","key","value","check","has","style","undefined","push","vValue","hValue","marginLeft","marginRight","width","color","url","height","JSON","stringify","block"],"mappings":"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","sourcesContent":["import { isEmptyObject } from './utils'\n\nexport interface MessageBlockStyle {\n  [index: string]: any\n\n  color?: string\n  background?: string\n}\n\nclass MessageBlock {\n  private _text: string\n  private style: MessageBlockStyle = new Object(null)\n\n  constructor(text: string) {\n    this._text = text\n  }\n\n  push(key: string, value: string, check: boolean = false): this {\n    if (!check || !this.has('color')) {\n      this.style[key] = value\n    }\n\n    return this\n  }\n\n  has(key: string): boolean {\n    return this.style[key] !== undefined\n  }\n\n  color(value: string, check: boolean = false): this {\n    return this.push('color', value, check)\n  }\n\n  background(value: string, check: boolean = false): this {\n    return this.push('background', value, check)\n  }\n\n  marginLeft(value: number, check: boolean = false): this {\n    if (value != 0) {\n      return this.push('margin-left', `${value}px`, check)\n    }\n    return this\n  }\n\n  marginRight(value: number, check: boolean = false): this {\n    if (value != 0) {\n      return this.push('margin-right', `${value}px`, check)\n    }\n    return this\n  }\n\n  marginTop(value: number, check: boolean = false): this {\n    return this.push('margin-top', `${value}px`, check)\n  }\n\n  marginBottom(value: number, check: boolean = false): this {\n    return this.push('margin-bottom', `${value}px`, check)\n  }\n\n  margin(vValue: number, hValue?: number, check: boolean = false): this {\n    let value = vValue === 0 ? '' : `${vValue}px`\n    if (hValue !== undefined) {\n      value += ` ${hValue}px`\n    }\n    return this.push('margin', value, check)\n  }\n\n  padding(vValue: number, hValue?: number, check: boolean = false): this {\n    let value = vValue === 0 ? '' : `${vValue}px`\n    if (hValue !== undefined) {\n      value += ` ${hValue}px`\n    }\n    return this.push('padding', value, check)\n  }\n\n  offsetLeft(value: number, check: boolean = false): this {\n    return this.marginLeft(value * 10, check)\n  }\n\n  offsetRight(value: number, check: boolean = false): this {\n    return this.marginRight(value * 10, check)\n  }\n\n  borderRadius(value: number, check: boolean = false): this {\n    return this.push('border-radius', `${value}px`, check)\n  }\n\n  border(width: number, style: string, color: string, check: boolean = false): this {\n    return this.push('border', `${width}px ${style} ${color}`, check)\n  }\n\n  size(value: number, check: boolean = false): this {\n    return this.push('font-size', `${value}px`, check)\n  }\n\n  bold(check: boolean = false): this {\n    return this.push('font-weight', 'bold', check)\n  }\n\n  italic(check: boolean = false): this {\n    return this.push('font-style', 'italic', check)\n  }\n\n  lineHeight(value: number, check: boolean = false): this {\n    return this.push('line-height', `${value}px`, check)\n  }\n\n  width(value?: number, check: boolean = false): this {\n    return value ? this.push('width', `${value}px`, check) : this\n  }\n\n  height(value?: number, check: boolean = false): this {\n    return value ? this.push('height', `${value}px`, check) : this\n  }\n\n  image(url: string, width?: number, height?: number): this {\n    return this.push('background-image', `url(${url}}`).push('background-size', `cover`).width(width).height(height)\n  }\n\n  text(value: string): this {\n    this._text = value\n\n    return this\n  }\n\n  getText(): string {\n    return this._text\n  }\n\n  getStyle(): MessageBlockStyle {\n    return this.style\n  }\n\n  hasStyle(): boolean {\n    return !isEmptyObject(this.style)\n  }\n\n  clearStyle(): this {\n    this.style = new Object(null)\n\n    return this\n  }\n\n  toJSON(): string {\n    return JSON.stringify({\n      _text: this._text,\n      style: this.style,\n    })\n  }\n\n  static instance(block: MessageBlock | string): MessageBlock {\n    return block instanceof MessageBlock ? block : new MessageBlock(block)\n  }\n}\n\nexport default MessageBlock\n"],"file":"MessageBlock.js"}