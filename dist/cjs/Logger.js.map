{"version":3,"file":"Logger.js","names":["Logger","driver","colors","level","LOG_ALL","logLevel","stringToLevel","msgLevel","msgText","prefix","offset","log","buildMessage","shouldLog","INFO","msg","info","DEBUG","debug","ERROR","error","TRACE","trace","panelText","bgColor","color","baseText","Message","instance","undefined","pushBlock","MessageBlock","background","offsetLeft","borderRadius","padding","block","offsetRight"],"sources":["../../src/Logger.ts"],"sourcesContent":["import { LoggerDriver } from './drivers/LoggerDriver'\nimport type { LevelType } from './LogLevel'\nimport { DEBUG, ERROR, INFO, LOG_ALL, stringToLevel, TRACE } from './LogLevel'\nimport Message from './Message'\nimport MessageBlock from './MessageBlock'\nimport { ColorValue } from './Color'\nimport ColorCollection from './ColorCollection'\n\nexport interface LoggerConfig {\n  driver: LoggerDriver\n  colors: ColorCollection\n  level?: LevelType | string\n}\n\ninterface PanelOptions {\n  bgColor?: ColorValue\n  color?: ColorValue\n  offset?: number\n}\n\nclass Logger {\n  private readonly driver: LoggerDriver\n  private readonly colors: ColorCollection\n\n  private logLevel: LevelType = LOG_ALL\n\n  constructor({ driver, colors, level }: LoggerConfig) {\n    this.driver = driver\n    this.colors = colors\n\n    if (level) {\n      if (typeof level === 'string') {\n        this.logLevel = stringToLevel(level)\n      } else {\n        this.logLevel = level\n      }\n    }\n  }\n\n  setLogLevel(level: LevelType): void {\n    this.logLevel = level\n  }\n\n  addLogLevel(level: LevelType): void {\n    this.logLevel |= level\n  }\n\n  excludeLogLevel(level: LevelType): void {\n    this.logLevel ^= level\n  }\n\n  public getDriver(): LoggerDriver {\n    return this.driver\n  }\n\n  public getColors(): ColorCollection {\n    return this.colors\n  }\n\n  private shouldLog(msgLevel: number): boolean {\n    return (this.logLevel & msgLevel) !== 0\n  }\n\n  log(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    this.driver.log(this.buildMessage(msgText, prefix, offset))\n  }\n\n  info(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    if (!this.shouldLog(INFO)) {\n      return\n    }\n\n    const msg = this.buildMessage(msgText, prefix, offset)\n\n    this.driver.info(msg)\n  }\n\n  debug(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(DEBUG)) {\n      return\n    }\n\n    this.driver.debug(this.buildMessage(msgText, prefix, offset))\n  }\n\n  error(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(ERROR)) {\n      return\n    }\n\n    this.driver.error(this.buildMessage(msgText, prefix, offset))\n  }\n\n  trace(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(TRACE)) {\n      return\n    }\n\n    this.driver.trace(this.buildMessage(msgText, prefix, offset))\n  }\n\n  panel(\n    panelText: string | MessageBlock,\n    { bgColor, color, offset }: PanelOptions = {},\n    baseText?: string | MessageBlock\n  ) {\n    const msg = Message.instance(undefined, this.colors).pushBlock(\n      MessageBlock.instance(panelText, { colors: this.colors })\n        .background(bgColor || 'white')\n        .color(color || 'gray')\n        .offsetLeft(offset || 0)\n        .borderRadius(3)\n        .padding(2, 4),\n\n      baseText ? MessageBlock.instance(baseText, { colors: this.colors }).offsetLeft(1) : null\n    )\n\n    this.driver.log(msg)\n  }\n\n  private buildMessage(msgText: string | Message | MessageBlock, prefix?: string, offset: number = 0): Message {\n    if (msgText instanceof Message) {\n      return msgText\n    }\n\n    const msg = new Message(undefined, this.colors)\n\n    if (prefix) {\n      const block = MessageBlock.instance(prefix, { colors: this.colors }).offsetRight(1)\n\n      if (offset) {\n        block.offsetLeft(offset)\n      }\n\n      msg.pushBlock(block)\n    }\n\n    msg.pushBlock(MessageBlock.instance(msgText, { colors: this.colors }))\n\n    return msg\n  }\n}\n\nexport default Logger\n"],"mappings":"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"}