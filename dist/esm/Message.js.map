{"version":3,"sources":["../../src/Message.ts"],"names":["MessageBlock","Message","blocks","Array","constructor","text","parse","getBlocks","pushBlock","args","forEach","block","push","clear","count","length","instance"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,OAAN,CAAc;AACJC,EAAAA,MAAM,GAAwB,IAAIC,KAAJ,EAAxB;;AAEdC,EAAAA,WAAW,CAACC,IAAD,EAA+B;AACxC,SAAKC,KAAL,CAAWD,IAAX;AACD;;AAEDE,EAAAA,SAAS,GAAwB;AAC/B,WAAO,KAAKL,MAAZ;AACD;;AAEDM,EAAAA,SAAS,CAAC,GAAGC,IAAJ,EAAyC;AAChDA,IAAAA,IAAI,CAACC,OAAL,CAAaC,KAAK,IAAI;AACpB,UAAIA,KAAK,YAAYX,YAArB,EAAmC;AACjC,aAAKE,MAAL,CAAYU,IAAZ,CAAiBD,KAAjB;AACD;AACF,KAJD;AAMA,WAAO,IAAP;AACD;;AAEDE,EAAAA,KAAK,GAAG;AACN,SAAKX,MAAL,GAAc,EAAd;AACD;;AAEDY,EAAAA,KAAK,GAAW;AACd,WAAO,KAAKZ,MAAL,CAAYa,MAAnB;AACD;;AAEOT,EAAAA,KAAK,CAACD,IAAD,EAAqC;AAChD,QAAIA,IAAJ,EAAU;AACR,WAAKG,SAAL,CAAeR,YAAY,CAACgB,QAAb,CAAsBX,IAAtB,CAAf;AACD;AACF;;AAEc,SAARW,QAAQ,CAACL,KAAD,EAAmD;AAChE,WAAOA,KAAK,YAAYV,OAAjB,GAA2BU,KAA3B,GAAmC,IAAIV,OAAJ,CAAYU,KAAZ,CAA1C;AACD;;AArCW;;AAwCd,eAAeV,OAAf","sourcesContent":["import MessageBlock from './MessageBlock'\n\nclass Message {\n  private blocks: Array<MessageBlock> = new Array<MessageBlock>()\n\n  constructor(text?: MessageBlock | string) {\n    this.parse(text)\n  }\n\n  getBlocks(): Array<MessageBlock> {\n    return this.blocks\n  }\n\n  pushBlock(...args: (MessageBlock | null)[]): this {\n    args.forEach(block => {\n      if (block instanceof MessageBlock) {\n        this.blocks.push(block)\n      }\n    })\n\n    return this\n  }\n\n  clear() {\n    this.blocks = []\n  }\n\n  count(): number {\n    return this.blocks.length\n  }\n\n  private parse(text?: string | MessageBlock): void {\n    if (text) {\n      this.pushBlock(MessageBlock.instance(text))\n    }\n  }\n\n  static instance(block?: Message | MessageBlock | string): Message {\n    return block instanceof Message ? block : new Message(block)\n  }\n}\n\nexport default Message\n"],"file":"Message.js"}