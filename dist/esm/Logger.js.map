{"version":3,"file":"Logger.js","names":["DEBUG","ERROR","INFO","LOG_ALL","stringToLevel","TRACE","Message","MessageBlock","Logger","logLevel","constructor","driver","colors","level","setLogLevel","addLogLevel","excludeLogLevel","getDriver","getColors","shouldLog","log","msgText","prefix","offset","buildMessage","info","msg","debug","error","trace","panel","panelText","bgColor","color","Object","baseText","instance","undefined","pushBlock","background","offsetLeft","borderRadius","padding","panels","blockConfigs","length","blocks","forEach","blockConfig","push","block","offsetRight"],"sources":["../../src/Logger.ts"],"sourcesContent":["import { LoggerDriver } from './drivers/LoggerDriver'\nimport type { LevelType } from './LogLevel'\nimport { DEBUG, ERROR, INFO, LOG_ALL, stringToLevel, TRACE } from './LogLevel'\nimport Message from './Message'\nimport type { MessageBlockConfig } from './MessageBlock'\nimport MessageBlock from './MessageBlock'\nimport { ColorValue } from './Color'\nimport ColorCollection from './ColorCollection'\n\nexport interface LoggerConfig {\n  driver: LoggerDriver\n  colors: ColorCollection\n  level?: LevelType | string\n}\n\ninterface PanelOptions {\n  bgColor?: ColorValue | string\n  color?: ColorValue | string\n  offset?: number\n}\n\ntype BlockPanel = string | MessageBlockConfig | MessageBlock\n\nclass Logger {\n  private readonly driver: LoggerDriver\n  private readonly colors: ColorCollection\n\n  private logLevel: LevelType = LOG_ALL\n\n  constructor({ driver, colors, level }: LoggerConfig) {\n    this.driver = driver\n    this.colors = colors\n\n    if (level) {\n      if (typeof level === 'string') {\n        this.logLevel = stringToLevel(level)\n      } else {\n        this.logLevel = level\n      }\n    }\n  }\n\n  setLogLevel(level: LevelType): void {\n    this.logLevel = level\n  }\n\n  addLogLevel(level: LevelType): void {\n    this.logLevel |= level\n  }\n\n  excludeLogLevel(level: LevelType): void {\n    this.logLevel ^= level\n  }\n\n  public getDriver(): LoggerDriver {\n    return this.driver\n  }\n\n  public getColors(): ColorCollection {\n    return this.colors\n  }\n\n  private shouldLog(level: LevelType | string): boolean {\n    if (typeof level === 'string') {\n      level = stringToLevel(level)\n    }\n\n    return (this.logLevel & level) !== 0\n  }\n\n  log(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    this.driver.log(this.buildMessage(msgText, prefix, offset))\n  }\n\n  info(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    if (!this.shouldLog(INFO)) {\n      return\n    }\n\n    const msg = this.buildMessage(msgText, prefix, offset)\n\n    this.driver.info(msg)\n  }\n\n  debug(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(DEBUG)) {\n      return\n    }\n\n    this.driver.debug(this.buildMessage(msgText, prefix, offset))\n  }\n\n  error(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(ERROR)) {\n      return\n    }\n\n    this.driver.error(this.buildMessage(msgText, prefix, offset))\n  }\n\n  trace(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(TRACE)) {\n      return\n    }\n\n    this.driver.trace(this.buildMessage(msgText, prefix, offset))\n  }\n\n  panel(\n    panelText: string | MessageBlock,\n    { bgColor, color, offset }: PanelOptions = new Object(null),\n    baseText?: string | MessageBlock,\n    logLevel?: LevelType | string\n  ) {\n    if (logLevel && !this.shouldLog(logLevel)) {\n      return\n    }\n\n    const msg = Message.instance(undefined, this.colors).pushBlock(\n      MessageBlock.instance(panelText, { colors: this.colors })\n        .background(bgColor || 'white')\n        .color(color || 'gray')\n        .offsetLeft(offset || 0)\n        .borderRadius(3)\n        .padding(2, 4),\n\n      baseText ? MessageBlock.instance(baseText, { colors: this.colors }).offsetLeft(1) : null\n    )\n\n    this.driver.log(msg)\n  }\n\n  panels(logLevel?: LevelType | string, ...blockConfigs: BlockPanel[]) {\n    if (!blockConfigs.length || (logLevel && !this.shouldLog(logLevel))) {\n      return\n    }\n\n    const blocks: MessageBlock[] = []\n    blockConfigs.forEach(blockConfig => {\n      blocks.push(MessageBlock.instance(blockConfig, { colors: this.colors }))\n    })\n\n    const msg = Message.instance().pushBlock(...blocks)\n\n    this.driver.log(msg)\n  }\n\n  private buildMessage(msgText: string | Message | MessageBlock, prefix?: string, offset: number = 0): Message {\n    if (msgText instanceof Message) {\n      return msgText\n    }\n\n    const msg = new Message(undefined, this.colors)\n\n    if (prefix) {\n      const block = MessageBlock.instance(prefix, { colors: this.colors }).offsetRight(1)\n\n      if (offset) {\n        block.offsetLeft(offset)\n      }\n\n      msg.pushBlock(block)\n    }\n\n    msg.pushBlock(MessageBlock.instance(msgText, { colors: this.colors }))\n\n    return msg\n  }\n}\n\nexport default Logger\n"],"mappings":"AAEA,SAASA,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,aAAtC,EAAqDC,KAArD,QAAkE,YAAlE;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;;AAkBA,MAAMC,MAAN,CAAa;EAIHC,QAAQ,GAAcN,OAAd;;EAEhBO,WAAW,CAAC;IAAEC,MAAF;IAAUC,MAAV;IAAkBC;EAAlB,CAAD,EAA0C;IACnD,KAAKF,MAAL,GAAcA,MAAd;IACA,KAAKC,MAAL,GAAcA,MAAd;;IAEA,IAAIC,KAAJ,EAAW;MACT,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;QAC7B,KAAKJ,QAAL,GAAgBL,aAAa,CAACS,KAAD,CAA7B;MACD,CAFD,MAEO;QACL,KAAKJ,QAAL,GAAgBI,KAAhB;MACD;IACF;EACF;;EAEDC,WAAW,CAACD,KAAD,EAAyB;IAClC,KAAKJ,QAAL,GAAgBI,KAAhB;EACD;;EAEDE,WAAW,CAACF,KAAD,EAAyB;IAClC,KAAKJ,QAAL,IAAiBI,KAAjB;EACD;;EAEDG,eAAe,CAACH,KAAD,EAAyB;IACtC,KAAKJ,QAAL,IAAiBI,KAAjB;EACD;;EAEMI,SAAS,GAAiB;IAC/B,OAAO,KAAKN,MAAZ;EACD;;EAEMO,SAAS,GAAoB;IAClC,OAAO,KAAKN,MAAZ;EACD;;EAEOO,SAAS,CAACN,KAAD,EAAqC;IACpD,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;MAC7BA,KAAK,GAAGT,aAAa,CAACS,KAAD,CAArB;IACD;;IAED,OAAO,CAAC,KAAKJ,QAAL,GAAgBI,KAAjB,MAA4B,CAAnC;EACD;;EAEDO,GAAG,CAACC,OAAD,EAA2CC,MAA3C,EAA4DC,MAAM,GAAG,CAArE,EAA8E;IAC/E,KAAKZ,MAAL,CAAYS,GAAZ,CAAgB,KAAKI,YAAL,CAAkBH,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,CAAhB;EACD;;EAEDE,IAAI,CAACJ,OAAD,EAA2CC,MAA3C,EAA4DC,MAAM,GAAG,CAArE,EAA8E;IAChF,IAAI,CAAC,KAAKJ,SAAL,CAAejB,IAAf,CAAL,EAA2B;MACzB;IACD;;IAED,MAAMwB,GAAG,GAAG,KAAKF,YAAL,CAAkBH,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,CAAZ;IAEA,KAAKZ,MAAL,CAAYc,IAAZ,CAAiBC,GAAjB;EACD;;EAEDC,KAAK,CAACN,OAAD,EAA2CC,MAA3C,EAA4DC,MAAM,GAAG,CAArE,EAAwE;IAC3E,IAAI,CAAC,KAAKJ,SAAL,CAAenB,KAAf,CAAL,EAA4B;MAC1B;IACD;;IAED,KAAKW,MAAL,CAAYgB,KAAZ,CAAkB,KAAKH,YAAL,CAAkBH,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,CAAlB;EACD;;EAEDK,KAAK,CAACP,OAAD,EAA2CC,MAA3C,EAA4DC,MAAM,GAAG,CAArE,EAAwE;IAC3E,IAAI,CAAC,KAAKJ,SAAL,CAAelB,KAAf,CAAL,EAA4B;MAC1B;IACD;;IAED,KAAKU,MAAL,CAAYiB,KAAZ,CAAkB,KAAKJ,YAAL,CAAkBH,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,CAAlB;EACD;;EAEDM,KAAK,CAACR,OAAD,EAA2CC,MAA3C,EAA4DC,MAAM,GAAG,CAArE,EAAwE;IAC3E,IAAI,CAAC,KAAKJ,SAAL,CAAed,KAAf,CAAL,EAA4B;MAC1B;IACD;;IAED,KAAKM,MAAL,CAAYkB,KAAZ,CAAkB,KAAKL,YAAL,CAAkBH,OAAlB,EAA2BC,MAA3B,EAAmCC,MAAnC,CAAlB;EACD;;EAEDO,KAAK,CACHC,SADG,EAEH;IAAEC,OAAF;IAAWC,KAAX;IAAkBV;EAAlB,IAA2C,IAAIW,MAAJ,CAAW,IAAX,CAFxC,EAGHC,QAHG,EAIH1B,QAJG,EAKH;IACA,IAAIA,QAAQ,IAAI,CAAC,KAAKU,SAAL,CAAeV,QAAf,CAAjB,EAA2C;MACzC;IACD;;IAED,MAAMiB,GAAG,GAAGpB,OAAO,CAAC8B,QAAR,CAAiBC,SAAjB,EAA4B,KAAKzB,MAAjC,EAAyC0B,SAAzC,CACV/B,YAAY,CAAC6B,QAAb,CAAsBL,SAAtB,EAAiC;MAAEnB,MAAM,EAAE,KAAKA;IAAf,CAAjC,EACG2B,UADH,CACcP,OAAO,IAAI,OADzB,EAEGC,KAFH,CAESA,KAAK,IAAI,MAFlB,EAGGO,UAHH,CAGcjB,MAAM,IAAI,CAHxB,EAIGkB,YAJH,CAIgB,CAJhB,EAKGC,OALH,CAKW,CALX,EAKc,CALd,CADU,EAQVP,QAAQ,GAAG5B,YAAY,CAAC6B,QAAb,CAAsBD,QAAtB,EAAgC;MAAEvB,MAAM,EAAE,KAAKA;IAAf,CAAhC,EAAyD4B,UAAzD,CAAoE,CAApE,CAAH,GAA4E,IAR1E,CAAZ;IAWA,KAAK7B,MAAL,CAAYS,GAAZ,CAAgBM,GAAhB;EACD;;EAEDiB,MAAM,CAAClC,QAAD,EAAgC,GAAGmC,YAAnC,EAA+D;IACnE,IAAI,CAACA,YAAY,CAACC,MAAd,IAAyBpC,QAAQ,IAAI,CAAC,KAAKU,SAAL,CAAeV,QAAf,CAA1C,EAAqE;MACnE;IACD;;IAED,MAAMqC,MAAsB,GAAG,EAA/B;IACAF,YAAY,CAACG,OAAb,CAAqBC,WAAW,IAAI;MAClCF,MAAM,CAACG,IAAP,CAAY1C,YAAY,CAAC6B,QAAb,CAAsBY,WAAtB,EAAmC;QAAEpC,MAAM,EAAE,KAAKA;MAAf,CAAnC,CAAZ;IACD,CAFD;IAIA,MAAMc,GAAG,GAAGpB,OAAO,CAAC8B,QAAR,GAAmBE,SAAnB,CAA6B,GAAGQ,MAAhC,CAAZ;IAEA,KAAKnC,MAAL,CAAYS,GAAZ,CAAgBM,GAAhB;EACD;;EAEOF,YAAY,CAACH,OAAD,EAA2CC,MAA3C,EAA4DC,MAAc,GAAG,CAA7E,EAAyF;IAC3G,IAAIF,OAAO,YAAYf,OAAvB,EAAgC;MAC9B,OAAOe,OAAP;IACD;;IAED,MAAMK,GAAG,GAAG,IAAIpB,OAAJ,CAAY+B,SAAZ,EAAuB,KAAKzB,MAA5B,CAAZ;;IAEA,IAAIU,MAAJ,EAAY;MACV,MAAM4B,KAAK,GAAG3C,YAAY,CAAC6B,QAAb,CAAsBd,MAAtB,EAA8B;QAAEV,MAAM,EAAE,KAAKA;MAAf,CAA9B,EAAuDuC,WAAvD,CAAmE,CAAnE,CAAd;;MAEA,IAAI5B,MAAJ,EAAY;QACV2B,KAAK,CAACV,UAAN,CAAiBjB,MAAjB;MACD;;MAEDG,GAAG,CAACY,SAAJ,CAAcY,KAAd;IACD;;IAEDxB,GAAG,CAACY,SAAJ,CAAc/B,YAAY,CAAC6B,QAAb,CAAsBf,OAAtB,EAA+B;MAAET,MAAM,EAAE,KAAKA;IAAf,CAA/B,CAAd;IAEA,OAAOc,GAAP;EACD;;AAhJU;;AAmJb,eAAelB,MAAf"}