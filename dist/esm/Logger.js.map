{"version":3,"file":"Logger.js","names":["DEBUG","ERROR","INFO","LOG_ALL","stringToLevel","TRACE","Message","MessageBlock","Logger","logLevel","constructor","driver","colors","level","setLevel","getDriver","getColors","shouldLog","msgLevel","log","msgText","prefix","offset","buildMessage","info","msg","debug","error","trace","panel","panelText","bgColor","color","baseText","instance","undefined","pushBlock","background","offsetLeft","borderRadius","padding","block","offsetRight"],"sources":["../../src/Logger.ts"],"sourcesContent":["import { LoggerDriver } from './drivers/LoggerDriver'\nimport type { LevelType } from './LogLevel'\nimport { DEBUG, ERROR, INFO, LOG_ALL, stringToLevel, TRACE } from './LogLevel'\nimport Message from './Message'\nimport MessageBlock from './MessageBlock'\nimport { ColorValue } from './Color'\nimport ColorCollection from './ColorCollection'\n\nexport interface LoggerConfig {\n  driver: LoggerDriver\n  colors: ColorCollection\n  level?: LevelType | string\n}\n\ninterface PanelOptions {\n  bgColor?: ColorValue\n  color?: ColorValue\n  offset?: number\n}\n\nclass Logger {\n  private readonly driver: LoggerDriver\n  private readonly colors: ColorCollection\n\n  private logLevel: LevelType = LOG_ALL\n\n  constructor({ driver, colors, level }: LoggerConfig) {\n    this.driver = driver\n    this.colors = colors\n\n    if (level) {\n      if (typeof level === 'string') {\n        this.logLevel = stringToLevel(level)\n      } else {\n        this.logLevel = level\n      }\n    }\n  }\n\n  setLevel(level: LevelType): void {\n    this.logLevel = level\n  }\n\n  public getDriver(): LoggerDriver {\n    return this.driver\n  }\n\n  public getColors(): ColorCollection {\n    return this.colors\n  }\n\n  private shouldLog(msgLevel: number): boolean {\n    return (this.logLevel & msgLevel) !== 0\n  }\n\n  log(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    this.driver.log(this.buildMessage(msgText, prefix, offset))\n  }\n\n  info(msgText: string | Message | MessageBlock, prefix?: string, offset = 0): void {\n    if (!this.shouldLog(INFO)) {\n      return\n    }\n\n    const msg = this.buildMessage(msgText, prefix, offset)\n\n    this.driver.info(msg)\n  }\n\n  debug(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(DEBUG)) {\n      return\n    }\n\n    this.driver.debug(this.buildMessage(msgText, prefix, offset))\n  }\n\n  error(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(ERROR)) {\n      return\n    }\n\n    this.driver.error(this.buildMessage(msgText, prefix, offset))\n  }\n\n  trace(msgText: string | Message | MessageBlock, prefix?: string, offset = 0) {\n    if (!this.shouldLog(TRACE)) {\n      return\n    }\n\n    this.driver.trace(this.buildMessage(msgText, prefix, offset))\n  }\n\n  panel(\n    panelText: string | MessageBlock,\n    { bgColor, color, offset }: PanelOptions = {},\n    baseText?: string | MessageBlock\n  ) {\n    const msg = Message.instance(undefined, this.colors).pushBlock(\n      MessageBlock.instance(panelText, { colors: this.colors })\n        .background(bgColor || 'white')\n        .color(color || 'gray')\n        .offsetLeft(offset || 0)\n        .borderRadius(3)\n        .padding(2, 4),\n\n      baseText ? MessageBlock.instance(baseText, { colors: this.colors }).offsetLeft(1) : null\n    )\n\n    this.driver.log(msg)\n  }\n\n  private buildMessage(msgText: string | Message | MessageBlock, prefix?: string, offset: number = 0): Message {\n    if (msgText instanceof Message) {\n      return msgText\n    }\n\n    const msg = new Message(undefined, this.colors)\n\n    if (prefix) {\n      const block = MessageBlock.instance(prefix, { colors: this.colors }).offsetRight(1)\n\n      if (offset) {\n        block.offsetLeft(offset)\n      }\n\n      msg.pushBlock(block)\n    }\n\n    msg.pushBlock(MessageBlock.instance(msgText, { colors: this.colors }))\n\n    return msg\n  }\n}\n\nexport default Logger\n"],"mappings":"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"}